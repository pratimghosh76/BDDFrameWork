<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="12" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteOne" duration-ms="103184" started-at="2016-12-23T15:33:20Z" finished-at="2016-12-23T15:35:03Z">
    <groups>
    </groups>
    <test name="SuiteOneCaseOne" duration-ms="66593" started-at="2016-12-23T15:33:20Z" finished-at="2016-12-23T15:34:26Z">
      <class name="com.stta.SuiteOne.SuiteOneCaseOne">
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@26ba2a48]" name="checkCaseToRun" is-config="true" duration-ms="47" started-at="2016-12-23T09:33:20Z" finished-at="2016-12-23T09:33:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="SuiteOneCaseOneTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@26ba2a48]" name="SuiteOneCaseOneTest" duration-ms="55701" started-at="2016-12-23T09:33:20Z" data-provider="SuiteOneCaseOneData" finished-at="2016-12-23T09:34:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseOneTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@26ba2a48]" name="reporterDataResults" is-config="true" duration-ms="68" started-at="2016-12-23T09:34:15Z" finished-at="2016-12-23T09:34:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="SuiteOneCaseOneTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@26ba2a48]" name="SuiteOneCaseOneTest" duration-ms="10645" started-at="2016-12-23T09:34:16Z" data-provider="SuiteOneCaseOneData" finished-at="2016-12-23T09:34:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseOneTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@26ba2a48]" name="reporterDataResults" is-config="true" duration-ms="33" started-at="2016-12-23T09:34:26Z" finished-at="2016-12-23T09:34:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@26ba2a48]" name="closeBrowser" is-config="true" duration-ms="73" started-at="2016-12-23T09:34:26Z" finished-at="2016-12-23T09:34:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteOne.SuiteOneCaseOne -->
    </test> <!-- SuiteOneCaseOne -->
    <test name="SuiteOneCaseTwo" duration-ms="36323" started-at="2016-12-23T15:34:27Z" finished-at="2016-12-23T15:35:03Z">
      <class name="com.stta.SuiteOne.SuiteOneCaseTwo">
        <test-method status="PASS" signature="checkSuiteToRun()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="checkSuiteToRun" is-config="true" duration-ms="1700" started-at="2016-12-23T09:33:18Z" finished-at="2016-12-23T09:33:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteToRun -->
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="checkCaseToRun" is-config="true" duration-ms="50" started-at="2016-12-23T09:34:27Z" finished-at="2016-12-23T09:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="SuiteOneCaseTwoTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="SuiteOneCaseTwoTest" duration-ms="25279" started-at="2016-12-23T09:34:27Z" data-provider="SuiteOneCaseTwoData" finished-at="2016-12-23T09:34:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="reporterDataResults" is-config="true" duration-ms="19" started-at="2016-12-23T09:34:52Z" finished-at="2016-12-23T09:34:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="FAIL" signature="SuiteOneCaseTwoTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="SuiteOneCaseTwoTest" duration-ms="10892" started-at="2016-12-23T09:34:52Z" data-provider="SuiteOneCaseTwoData" finished-at="2016-12-23T09:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
ActualResult Value -2 And ExpectedResult Value -3 Not Match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
ActualResult Value -2 And ExpectedResult Value -3 Not Match
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at com.stta.SuiteOne.SuiteOneCaseTwo.SuiteOneCaseTwoTest(SuiteOneCaseTwo.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1220)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="reporterDataResults" is-config="true" duration-ms="20" started-at="2016-12-23T09:35:03Z" finished-at="2016-12-23T09:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@7225790e]" name="closeBrowser" is-config="true" duration-ms="51" started-at="2016-12-23T09:35:03Z" finished-at="2016-12-23T09:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteOne.SuiteOneCaseTwo -->
    </test> <!-- SuiteOneCaseTwo -->
  </suite> <!-- SuiteOne -->
  <suite name="SuiteThree" duration-ms="1155" started-at="2016-12-23T15:36:09Z" finished-at="2016-12-23T15:36:10Z">
    <groups>
    </groups>
    <test name="SuiteThree_TestCase1" duration-ms="658" started-at="2016-12-23T15:36:09Z" finished-at="2016-12-23T15:36:09Z">
      <class name="com.stta.SuiteThree.SuiteThreeCaseOne">
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="checkCaseToRun" is-config="true" duration-ms="84" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="TC_01_TestCase(int, java.util.Map)[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="TC_01_TestCase" duration-ms="208" started-at="2016-12-23T09:36:09Z" data-provider="setData" finished-at="2016-12-23T09:36:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{TestNGTestName=SuiteThree_TestCase1, Iteration=, Pass/Fail/Skip=PASS, TestCaseName=TC_01_TestCase, Data 2 Column=5, DataToRun=y, Data 3 Column=7, Expected Result=21, Data 1 Column=9}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01_TestCase -->
        <test-method status="PASS" signature="initializeTestProperties()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="initializeTestProperties" is-config="true" duration-ms="0" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeTestProperties -->
        <test-method status="PASS" signature="closeTest()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="closeTest" is-config="true" duration-ms="117" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeTest -->
        <test-method status="PASS" signature="initializeTestProperties()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="initializeTestProperties" is-config="true" duration-ms="0" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeTestProperties -->
        <test-method status="PASS" signature="TC_01_TestCase(int, java.util.Map)[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="TC_01_TestCase" duration-ms="169" started-at="2016-12-23T09:36:09Z" data-provider="setData" finished-at="2016-12-23T09:36:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{TestNGTestName=SuiteThree_TestCase1, Iteration=, Pass/Fail/Skip=SKIP, TestCaseName=TC_01_TestCase, Data 2 Column=7, DataToRun=y, Data 3 Column=3, Expected Result=13, Data 1 Column=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01_TestCase -->
        <test-method status="PASS" signature="closeTest()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@7ca48474]" name="closeTest" is-config="true" duration-ms="75" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeTest -->
      </class> <!-- com.stta.SuiteThree.SuiteThreeCaseOne -->
    </test> <!-- SuiteThree_TestCase1 -->
    <test name="SuiteThree_TestCase2" duration-ms="213" started-at="2016-12-23T15:36:09Z" finished-at="2016-12-23T15:36:10Z">
      <class name="com.stta.SuiteThree.SuiteThreeCaseOne">
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@5cc7c2a6]" name="checkCaseToRun" is-config="true" duration-ms="12" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="initializeTestProperties()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@5cc7c2a6]" name="initializeTestProperties" is-config="true" duration-ms="0" started-at="2016-12-23T09:36:09Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeTestProperties -->
        <test-method status="PASS" signature="TC_02_TestCase(int, java.util.Map)[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@5cc7c2a6]" name="TC_02_TestCase" duration-ms="128" started-at="2016-12-23T09:36:09Z" data-provider="setData" finished-at="2016-12-23T09:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{TestNGTestName=SuiteThree_TestCase2, Iteration=, Pass/Fail/Skip=, TestCaseName=TC_02_TestCase, Data 2 Column=5, DataToRun=y, Data 3 Column=7, Expected Result=21, Data 1 Column=9}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02_TestCase -->
        <test-method status="PASS" signature="closeTest()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseOne@5cc7c2a6]" name="closeTest" is-config="true" duration-ms="71" started-at="2016-12-23T09:36:10Z" finished-at="2016-12-23T09:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeTest -->
      </class> <!-- com.stta.SuiteThree.SuiteThreeCaseOne -->
    </test> <!-- SuiteThree_TestCase2 -->
    <test name="SuiteThree_TestCase3" duration-ms="135" started-at="2016-12-23T15:36:10Z" finished-at="2016-12-23T15:36:10Z">
      <class name="com.stta.SuiteThree.SuiteThreeCaseTwo">
        <test-method status="PASS" signature="checkSuiteToRun()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseTwo@2344fc66]" name="checkSuiteToRun" is-config="true" duration-ms="418" started-at="2016-12-23T09:36:08Z" finished-at="2016-12-23T09:36:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteToRun -->
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseTwo@2344fc66]" name="checkCaseToRun" is-config="true" duration-ms="10" started-at="2016-12-23T09:36:10Z" finished-at="2016-12-23T09:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="TC_03_TestCase()[pri:0, instance:com.stta.SuiteThree.SuiteThreeCaseTwo@2344fc66]" name="TC_03_TestCase" duration-ms="125" started-at="2016-12-23T09:36:10Z" finished-at="2016-12-23T09:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03_TestCase -->
      </class> <!-- com.stta.SuiteThree.SuiteThreeCaseTwo -->
    </test> <!-- SuiteThree_TestCase3 -->
  </suite> <!-- SuiteThree -->
  <suite name="Calc Suite" duration-ms="0" started-at="2016-12-23T15:36:17Z" finished-at="2016-12-23T15:36:17Z">
    <groups>
    </groups>
  </suite> <!-- Calc Suite -->
  <suite name="SuiteTwo" duration-ms="64661" started-at="2016-12-23T15:35:03Z" finished-at="2016-12-23T15:36:08Z">
    <groups>
    </groups>
    <test name="SuiteTwoCaseOne" duration-ms="32637" started-at="2016-12-23T15:35:03Z" finished-at="2016-12-23T15:35:36Z">
      <class name="com.stta.SuiteTwo.SuiteTwoCaseOne">
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@2c9f9fb0]" name="checkCaseToRun" is-config="true" duration-ms="21" started-at="2016-12-23T09:35:03Z" finished-at="2016-12-23T09:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="SuiteTwoCaseOneTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@2c9f9fb0]" name="SuiteTwoCaseOneTest" duration-ms="22411" started-at="2016-12-23T09:35:03Z" data-provider="SuiteTwoCaseOneData" finished-at="2016-12-23T09:35:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseOneTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@2c9f9fb0]" name="reporterDataResults" is-config="true" duration-ms="41" started-at="2016-12-23T09:35:26Z" finished-at="2016-12-23T09:35:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="SuiteTwoCaseOneTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@2c9f9fb0]" name="SuiteTwoCaseOneTest" duration-ms="10107" started-at="2016-12-23T09:35:26Z" data-provider="SuiteTwoCaseOneData" finished-at="2016-12-23T09:35:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseOneTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@2c9f9fb0]" name="reporterDataResults" is-config="true" duration-ms="15" started-at="2016-12-23T09:35:36Z" finished-at="2016-12-23T09:35:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@2c9f9fb0]" name="closeBrowser" is-config="true" duration-ms="38" started-at="2016-12-23T09:35:36Z" finished-at="2016-12-23T09:35:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteTwo.SuiteTwoCaseOne -->
    </test> <!-- SuiteTwoCaseOne -->
    <test name="SuiteTwoCaseTwo" duration-ms="31829" started-at="2016-12-23T15:35:36Z" finished-at="2016-12-23T15:36:08Z">
      <class name="com.stta.SuiteTwo.SuiteTwoCaseTwo">
        <test-method status="PASS" signature="checkSuiteToRun()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="checkSuiteToRun" is-config="true" duration-ms="500" started-at="2016-12-23T09:35:03Z" finished-at="2016-12-23T09:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteToRun -->
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="checkCaseToRun" is-config="true" duration-ms="24" started-at="2016-12-23T09:35:36Z" finished-at="2016-12-23T09:35:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="PASS" signature="SuiteTwoCaseTwoTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="SuiteTwoCaseTwoTest" duration-ms="21397" started-at="2016-12-23T09:35:36Z" data-provider="SuiteTwoCaseTwoData" finished-at="2016-12-23T09:35:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="reporterDataResults" is-config="true" duration-ms="12" started-at="2016-12-23T09:35:58Z" finished-at="2016-12-23T09:35:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="FAIL" signature="SuiteTwoCaseTwoTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="SuiteTwoCaseTwoTest" duration-ms="10332" started-at="2016-12-23T09:35:58Z" data-provider="SuiteTwoCaseTwoData" finished-at="2016-12-23T09:36:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
ActualResult Value 2.5 And ExpectedResult Value 2.0 Not Match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
ActualResult Value 2.5 And ExpectedResult Value 2.0 Not Match
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at com.stta.SuiteTwo.SuiteTwoCaseTwo.SuiteTwoCaseTwoTest(SuiteTwoCaseTwo.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1220)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="reporterDataResults" is-config="true" duration-ms="17" started-at="2016-12-23T09:36:08Z" finished-at="2016-12-23T09:36:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@13c78c0b]" name="closeBrowser" is-config="true" duration-ms="43" started-at="2016-12-23T09:36:08Z" finished-at="2016-12-23T09:36:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteTwo.SuiteTwoCaseTwo -->
    </test> <!-- SuiteTwoCaseTwo -->
  </suite> <!-- SuiteTwo -->
</testng-results>
